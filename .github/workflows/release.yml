name: Build and Release

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for all tags and branches
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      
      - name: Calculate version
        id: version
        run: |
          # Get the short SHA of the commit
          COMMIT_SHA=$(git rev-parse --short HEAD)
          # Get the date in YYYY.MM.DD format
          DATE=$(date '+%Y.%m.%d')
          # Compose version (you can modify this format)
          VERSION="v${DATE}-${COMMIT_SHA}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Build for all platforms
        run: |
          # Build for MacOS
          GOOS=darwin GOARCH=amd64 go build -o gitoko-mac-amd64
          GOOS=darwin GOARCH=arm64 go build -o gitoko-mac-arm64
          
          # Build for Linux
          GOOS=linux GOARCH=amd64 go build -o gitoko-linux-amd64
          GOOS=linux GOARCH=arm64 go build -o gitoko-linux-arm64
          
          # Build for Windows
          GOOS=windows GOARCH=amd64 go build -o gitoko-windows-amd64.exe
      
      - name: Create Release
        id: create_release
        run: |
          gh release create ${{ steps.version.outputs.version }} \
            --title "Gitoko ${{ steps.version.outputs.version }}" \
            --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload Release Assets
        run: |
          gh release upload ${{ steps.version.outputs.version }} \
            gitoko-mac-amd64 \
            gitoko-mac-arm64 \
            gitoko-linux-amd64 \
            gitoko-linux-arm64 \
            gitoko-windows-amd64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}